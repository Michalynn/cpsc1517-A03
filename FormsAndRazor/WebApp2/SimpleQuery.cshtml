@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Simple Query");
    //outout variables
    //needed on the form
    string regionid = "";
    string regiondescription = "";

    var regionarg = Request.Form["RegionArg"];
    var thebutton = Request.Form["theButton"];
    int inputarg = 0;
    //first time the page is used, NO form has yet to
    //      be created, therefore the input variables will 
    //          be NULL
    if (string.IsNullOrEmpty(regionarg) || 
            !int.TryParse(regionarg, out inputarg))
    {
        regionarg = "0";
    }

    //open a connection to the database
    //use the connection string NAME attribute value
    var db = Database.Open("NWDB");
    //create sql query to be executed
    //the input argument will be represented by a placeholder
    //      in the command
    //placeholders are index (starts at 0)
    // your query can be coded on several physical lines
    var sqlcommand = "SELECT RegionID, RegionDescription "
                      + "FROM Region "
                      + "WHERE RegionID = @0";

    //execute the query
    //there are 3 ways to execute query commands DEPENDING on the expected result
    //a) a single row returned: .QuerySingle()
    //b) 0 OR more than 1 rows returned: .Query()
    //c) a single value (not a row) returned: .QueryValue()

    //we are exoecting a single row
    //WHY? Lookup is by primary key (meaning only one row coming back)
    //syntas is .xxxx(commandstring [,list of argument values])
    //the order of the values in the list of argument values MUST match the order
    //      expected by the placeholders
 
   var results = db.QuerySingle(sqlcommand,regionarg);

}

@section banner{

    <h1>Database PKey Query</h1>
}

@if (IsPost) //did I push my submit or reset button
{
    if (thebutton.Equals("reset")) //press reset and clears everything out
    {
        regionid = "";
        regiondescription = "";
        regionarg = "";
    }
    else
    {
        //test for results
        //the test for results DEPEND on the execution of the command
        //for a) and c) test for NULL
        //for b) test ".Count == 0"

        if (results == null)
        {
            <p>There is no region with the ID of @regionarg</p>
            regionid = "";
            regiondescription = "";
        }
        else // if found result
        {
            //you can access data from your results from either by
            //a) index of xxxx[index]
            //b) by property: syntax xxxx.PropertyName

            //the data type of the result item is the return data type of the property
            //the form likes to output --> strings
            <p>Found</p>
            regionid = results[0].ToString();
            regiondescription = results.RegionDescription();
        }
    }
}
else
{
    regionarg = ""; // show the placeholder prompt
}


    <form id="theform" method="post">
        <div class="row">
            <div class="col-6">
                <div class="offset-1">
                    <label id="lblRegionArg">Enter Region ID:</label>&nbsp;&nbsp;
                    <input type="text" id="RegionArg" name="RegionArg"
                           value="@regionarg" placeholder="region id"
                           step="1" min="1"/>
                    <br /><br />
                    <button type="submit" id="theButton" name="theButton"
                            value="submit" class="btn btn-primary">
                        Submit
                    </button>&nbsp;&nbsp;
                    <button type="reset" id="theButton" name="theButton"
                            value="reset" class="btn btn-light">
                        Reset
                    </button>&nbsp;&nbsp;
                </div>
            </div>
            <div class="col-6">
                <div class="offset-1">
                    <label id="lblRegionArg">Region ID:</label>&nbsp;&nbsp;
                    <label id="RegionID">@regionid</label>
                    <br /><br />
                    <label id="lblRegionDescription">Region Name</label>&nbsp;&nbsp;
                    <input type="text" id="RegionDescription" name="RegionDescription"
                           value="@regiondescription" readonly/>
                    
                </div>
            </div>
        </div>
    </form>


